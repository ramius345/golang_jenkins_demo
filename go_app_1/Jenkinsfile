pipeline {
    agent {
	kubernetes {
	    label "jenkins-golang-skopeo-agent"
	    cloud "openshift"
            inheritFrom "maven"
	    containerTemplate {
		name "jnlp"
		image "image-registry.openshift-image-registry.svc:5000/golang-jenkins-demo/jenkins-agent-appdev"
		resourceRequestMemory "2Gi"
		resourceLimitMemory "2Gi"
		resourceRequestCpu "2"
		resourceLimitCpu "2"
	    }
	}
    }


    stages {
        stage('Checkout Source') {
            steps {
                checkout scm      
            }
        }
        stage('Unit Test'){
            steps {
                dir('go_app_1'){
                    script {
                        sh "go test"
                    }
                }
            }
        }
        stage('Build'){
            steps {
                dir('go_app_1/cmd'){
                    script {
                        sh "CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags=\"-w -s\" -o cmd"
                    }
                }
            }
        }
        stage('Upload Binary'){
            steps {
                dir('go_app_1/cmd'){
                    script {
                        sh "curl -v -u admin:pass#123 --upload-file cmd http://nexus.golang-jenkins-demo.svc.cluster.local:8081/repository/binaries/go_app_1/$BUILD_NUMBER/go_app_1"
                    }
                }
            }
        }
        stage('Build Container'){
            steps {
                script{
                    openshift.withCluster(){
                        openshift.withProject("golang-jenkins-demo") {
                            def dockerfileData = """FROM alpine:latest as builder
RUN apk add curl
RUN curl -L -v http://nexus.golang-jenkins-demo.svc.cluster.local:8081/repository/binaries/go_app_1/$BUILD_NUMBER/go_app_1 -o /go_app_1
RUN chmod +x /go_app_1
FROM scratch
COPY --from=builder /go_app_1 /go_app_1
ENTRYPOINT [ "/go_app_1" ]"""
                            

                            def buildconfig = [
                                "apiVersion": "build.openshift.io/v1",
                                "kind": "BuildConfig",
                                "metadata": [
                                    "labels": [
                                        "build": "go-app-1"
                                    ],
                                    "name": "go-app-1",
                                    "namespace": "golang-jenkins-demo"
                                ],
                                "spec": [
                                    "source": [
                                        "dockerfile": dockerfileData,
                                        "type": "Dockerfile"
                                    ],
                                    "strategy": [
                                        "dockerStrategy": [
                                            "from": [
                                                "kind": "DockerImage",
                                                "name": "scratch"
                                            ]
                                        ],
                                        "type": "Docker"
                                    ]
                                ]
                            ]
                            openshift.apply(buildconfig)
                            openshift.selector("bc","go-app-1").startBuild("--wait=true")                        
                        }
                    }
                }
            }
        }
    }
}
